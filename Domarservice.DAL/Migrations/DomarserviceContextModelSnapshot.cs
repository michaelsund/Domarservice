// <auto-generated />
using System;
using Domarservice.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Domarservice.Migrations
{
    [DbContext(typeof(DomarserviceContext))]
    partial class DomarserviceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domarservice.DAL.BookingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int?>("RequestingCompanyId")
                        .HasColumnType("integer");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestingCompanyId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("BookingRequests");
                });

            modelBuilder.Entity("Domarservice.DAL.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Sport")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domarservice.DAL.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("Domarservice.DAL.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AvailableAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Booked")
                        .HasColumnType("boolean");

                    b.Property<int>("ChosenRequest")
                        .HasColumnType("integer");

                    b.Property<int?>("RefereeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RefereeId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Domarservice.DAL.BookingRequest", b =>
                {
                    b.HasOne("Domarservice.DAL.Company", "RequestingCompany")
                        .WithMany()
                        .HasForeignKey("RequestingCompanyId");

                    b.HasOne("Domarservice.DAL.Schedule", null)
                        .WithMany("Requests")
                        .HasForeignKey("ScheduleId");

                    b.Navigation("RequestingCompany");
                });

            modelBuilder.Entity("Domarservice.DAL.Schedule", b =>
                {
                    b.HasOne("Domarservice.DAL.Referee", null)
                        .WithMany("ScheduleList")
                        .HasForeignKey("RefereeId");
                });

            modelBuilder.Entity("Domarservice.DAL.Referee", b =>
                {
                    b.Navigation("ScheduleList");
                });

            modelBuilder.Entity("Domarservice.DAL.Schedule", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
